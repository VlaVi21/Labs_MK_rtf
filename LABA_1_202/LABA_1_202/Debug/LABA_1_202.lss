
LABA_1_202.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000010c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000160  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000190  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b7f  00000000  00000000  00000234  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000684  00000000  00000000  00000db3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008bd  00000000  00000000  00001437  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000dc  00000000  00000000  00001cf4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00010682  00000000  00000000  00001dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005f4  00000000  00000000  00012452  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00012a46  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000030e  00000000  00000000  00012a9e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	38 c0       	rjmp	.+112    	; 0x76 <__vector_1>
   6:	00 00       	nop
   8:	53 c0       	rjmp	.+166    	; 0xb0 <__vector_2>
   a:	00 00       	nop
   c:	33 c0       	rjmp	.+102    	; 0x74 <__bad_interrupt>
   e:	00 00       	nop
  10:	31 c0       	rjmp	.+98     	; 0x74 <__bad_interrupt>
  12:	00 00       	nop
  14:	2f c0       	rjmp	.+94     	; 0x74 <__bad_interrupt>
  16:	00 00       	nop
  18:	2d c0       	rjmp	.+90     	; 0x74 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2b c0       	rjmp	.+86     	; 0x74 <__bad_interrupt>
  1e:	00 00       	nop
  20:	29 c0       	rjmp	.+82     	; 0x74 <__bad_interrupt>
  22:	00 00       	nop
  24:	27 c0       	rjmp	.+78     	; 0x74 <__bad_interrupt>
  26:	00 00       	nop
  28:	25 c0       	rjmp	.+74     	; 0x74 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	23 c0       	rjmp	.+70     	; 0x74 <__bad_interrupt>
  2e:	00 00       	nop
  30:	21 c0       	rjmp	.+66     	; 0x74 <__bad_interrupt>
  32:	00 00       	nop
  34:	1f c0       	rjmp	.+62     	; 0x74 <__bad_interrupt>
  36:	00 00       	nop
  38:	1d c0       	rjmp	.+58     	; 0x74 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1b c0       	rjmp	.+54     	; 0x74 <__bad_interrupt>
  3e:	00 00       	nop
  40:	19 c0       	rjmp	.+50     	; 0x74 <__bad_interrupt>
  42:	00 00       	nop
  44:	17 c0       	rjmp	.+46     	; 0x74 <__bad_interrupt>
  46:	00 00       	nop
  48:	15 c0       	rjmp	.+42     	; 0x74 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	13 c0       	rjmp	.+38     	; 0x74 <__bad_interrupt>
  4e:	00 00       	nop
  50:	11 c0       	rjmp	.+34     	; 0x74 <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 36       	cpi	r26, 0x60	; 96
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	3c d0       	rcall	.+120    	; 0xea <main>
  72:	4a c0       	rjmp	.+148    	; 0x108 <_exit>

00000074 <__bad_interrupt>:
  74:	c5 cf       	rjmp	.-118    	; 0x0 <__vectors>

00000076 <__vector_1>:
			
			
		}
	}
	
}
  76:	1f 92       	push	r1
  78:	0f 92       	push	r0
  7a:	0f b6       	in	r0, 0x3f	; 63
  7c:	0f 92       	push	r0
  7e:	11 24       	eor	r1, r1
  80:	8f 93       	push	r24
  82:	9f 93       	push	r25
  84:	82 9b       	sbis	0x10, 2	; 16
  86:	06 c0       	rjmp	.+12     	; 0x94 <__vector_1+0x1e>
  88:	83 99       	sbic	0x10, 3	; 16
  8a:	04 c0       	rjmp	.+8      	; 0x94 <__vector_1+0x1e>
  8c:	92 b3       	in	r25, 0x12	; 18
  8e:	80 e1       	ldi	r24, 0x10	; 16
  90:	89 27       	eor	r24, r25
  92:	82 bb       	out	0x12, r24	; 18
  94:	82 9b       	sbis	0x10, 2	; 16
  96:	05 c0       	rjmp	.+10     	; 0xa2 <__vector_1+0x2c>
  98:	83 9b       	sbis	0x10, 3	; 16
  9a:	03 c0       	rjmp	.+6      	; 0xa2 <__vector_1+0x2c>
  9c:	82 b3       	in	r24, 0x12	; 18
  9e:	80 58       	subi	r24, 0x80	; 128
  a0:	82 bb       	out	0x12, r24	; 18
  a2:	9f 91       	pop	r25
  a4:	8f 91       	pop	r24
  a6:	0f 90       	pop	r0
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	0f 90       	pop	r0
  ac:	1f 90       	pop	r1
  ae:	18 95       	reti

000000b0 <__vector_2>:
  b0:	1f 92       	push	r1
  b2:	0f 92       	push	r0
  b4:	0f b6       	in	r0, 0x3f	; 63
  b6:	0f 92       	push	r0
  b8:	11 24       	eor	r1, r1
  ba:	8f 93       	push	r24
  bc:	9f 93       	push	r25
  be:	83 9b       	sbis	0x10, 3	; 16
  c0:	06 c0       	rjmp	.+12     	; 0xce <__vector_2+0x1e>
  c2:	82 99       	sbic	0x10, 2	; 16
  c4:	04 c0       	rjmp	.+8      	; 0xce <__vector_2+0x1e>
  c6:	92 b3       	in	r25, 0x12	; 18
  c8:	80 e2       	ldi	r24, 0x20	; 32
  ca:	89 27       	eor	r24, r25
  cc:	82 bb       	out	0x12, r24	; 18
  ce:	82 9b       	sbis	0x10, 2	; 16
  d0:	05 c0       	rjmp	.+10     	; 0xdc <__vector_2+0x2c>
  d2:	83 9b       	sbis	0x10, 3	; 16
  d4:	03 c0       	rjmp	.+6      	; 0xdc <__vector_2+0x2c>
  d6:	82 b3       	in	r24, 0x12	; 18
  d8:	80 58       	subi	r24, 0x80	; 128
  da:	82 bb       	out	0x12, r24	; 18
  dc:	9f 91       	pop	r25
  de:	8f 91       	pop	r24
  e0:	0f 90       	pop	r0
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	0f 90       	pop	r0
  e6:	1f 90       	pop	r1
  e8:	18 95       	reti

000000ea <main>:

int main (void)
{
	DDRD|=RED|GREEN|BLUE;
  ea:	81 b3       	in	r24, 0x11	; 17
  ec:	80 6b       	ori	r24, 0xB0	; 176
  ee:	81 bb       	out	0x11, r24	; 17

	PORTD = OFF; //гасить всі світлодіоди
  f0:	12 ba       	out	0x12, r1	; 18
	MCUCR |= (1 << ISC01) | (1 << ISC00); // спрацювання переривань
  f2:	85 b7       	in	r24, 0x35	; 53
  f4:	83 60       	ori	r24, 0x03	; 3
  f6:	85 bf       	out	0x35, r24	; 53
	MCUCR |= (1 << ISC11) | (1 << ISC10);
  f8:	85 b7       	in	r24, 0x35	; 53
  fa:	8c 60       	ori	r24, 0x0C	; 12
  fc:	85 bf       	out	0x35, r24	; 53

	GICR  |= (1 << INT0) | (1 << INT1); // ключення переривань на INT0 та INT1
  fe:	8b b7       	in	r24, 0x3b	; 59
 100:	80 6c       	ori	r24, 0xC0	; 192
 102:	8b bf       	out	0x3b, r24	; 59
		PORTD ^= RED;
	}
}

Zavd6(){
		sei(); //глобальне увімкнення переривань
 104:	78 94       	sei
 106:	fe cf       	rjmp	.-4      	; 0x104 <main+0x1a>

00000108 <_exit>:
 108:	f8 94       	cli

0000010a <__stop_program>:
 10a:	ff cf       	rjmp	.-2      	; 0x10a <__stop_program>
